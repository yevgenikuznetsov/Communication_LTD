<?xml version="1.0" encoding="UTF-8"?>
<configurations>
	<db>
		<ip>127.0.0.1</ip>
		<port>3306</port>
		<user>root</user>
		<password>Your Password</password>
		<database>Communication_LTD</database>
	</db>
	<general>
		<secure>true</secure>
	</general>
	<mail>
		<host>smtp.gmail.com</host>
		<port>587</port>
		<username>communicationltdproject@gmail.com</username>
		<password>Your Password</password>
		<from>no-reply@communicationltd.com</from>
		<resetPasswordHTMLTemplateFile>reset-password-message-template.ftlh</resetPasswordHTMLTemplateFile>
	</mail>
	<password>
		<length>10</length> <!-- Password length -->
		<symbols>^.*((?=(.*[A-Z]){1,})(?=(.*[a-z]){1,})(?=(.*[\d]){1,})(?=(.*[\W]){1,})(?!.*\s)).*$</symbols> <!-- Acceptable symbols to create a password, must be as Regex. see Regex options comment at end of file -->
		<history>3</history> <!-- Number of old passwords to compare when changing to a new one -->
		<dictionaryFile>C:\PasswordDictionary.txt</dictionaryFile>
		<loginAttempts>50</loginAttempts> <!-- Number of attempts before denying login -->
	</password>
	<ssl>
		<enable>true</enable> <!-- SSL enable/disable -->
		<port>8444</port> <!-- Server port -->
		<enabledProtocols>TLSv1.2</enabledProtocols> <!-- Protocols for use, seperate each one by ',' -->
		<keyStore>classpath:tls/certificate.p12</keyStore> <!-- Key store file path -->
		<keyStoreType>PKCS12</keyStoreType> <!-- Key store type -->
		<keyStorePassword>ofir_tamir_yevgeni</keyStorePassword> <!-- Key store password -->
		<keyAlias>cohen_hazut_kuznetsov</keyAlias> <!-- Key alias -->
		<keyPassword>ofir_tamir_yevgeni</keyPassword>
	</ssl>
</configurations>

<!-- 
Regex options:
	[A-Z] Any upper case letter
	[a-z] Any lower case letter
	.	Any character (may or may not match terminator)
	\d	Any digits, short of [0-9]
	\D	Any non-digit, short for [^0-9]
	\s	Any whitespace character, short for [\t\n\x0B\f\r]
	\S	Any non-whitespace character, short for [^\s]
	\w	Any word character, short for [a-zA-Z_0-9]
	\W	Any non-word character, short for [^\w]
	\b	A word boundary
	\B	A non word boundary
	
Regex pattern:
	(?=(.*<pattern>){1,}) - at least 1 appearance of the <pattern> that was entered, <pattern> can be any option from the Regex options
-->